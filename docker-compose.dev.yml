version: '3.8'

services:

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ
      - "15672:15672" # Management Plugin
      #environment:
      #RABBITMQ_DEFAULT_USER: user
      #RABBITMQ_DEFAULT_PASS: password
      #RABBITMQ_DEFINITIONS: /etc/rabbitmq/definitions.json
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      #- ./rabbitmq/init-rabbitmq.sh:/docker-entrypoint-init.d/init-rabbitmq.sh
    entrypoint: [ "docker-entrypoint.sh" ]
    command: [ "rabbitmq-server" ]
    networks:
      - rabbitmq_network

  entry_generator:
    build:
      context: ./services/parking-simulator/
      dockerfile: Dockerfile.dev
    container_name: entrygenerator
    environment:
      - LOG_LEVEL=DEBUG
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672/
      - RABBITMQ_QUEUE_NAME=vehicle_entries
      - GENERATOR_MODE=entry
      - REDIS_PASSWORD=your_redis_password
      - REDIS_ADDR=redis:6379
      - REDIS_DB=0
    volumes:
      - ./sharedutils:/go/src/github.com/sheenacodes/sharedutils # Mount local shared utils
    command: [ "sh", "-c", "go mod edit -replace github.com/sheenacodes/sharedutils=/go/src/github.com/sheenacodes/sharedutils && go run main.go" ]

    networks:
      - rabbitmq_network

  exit_generator:
    build:
      context: ./services/parking-simulator/
      dockerfile: Dockerfile.dev
    container_name: exitgenerator
    environment:
      - LOG_LEVEL=DEBUG
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672/
      - RABBITMQ_QUEUE_NAME=vehicle_exits
      - GENERATOR_MODE=exit
      - REDIS_PASSWORD=your_redis_password
      - REDIS_ADDR=redis:6379
      - REDIS_DB=0
    volumes:
      - ./sharedutils:/go/src/github.com/sheenacodes/sharedutils # Mount local shared utils
    command: [ "sh", "-c", "go mod edit -replace github.com/sheenacodes/sharedutils=/go/src/github.com/sheenacodes/sharedutils && go run main.go" ]

    networks:
      - rabbitmq_network

  record_keeper:
    build:
      context: ./services/parking-record-keeper/
      dockerfile: Dockerfile.dev
    container_name: recordkeeper
    environment:
      - LOG_LEVEL=DEBUG
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672/
      - RABBITMQ_ENTRY_QUEUE_NAME=vehicle_entries
      - RABBITMQ_EXIT_QUEUE_NAME=vehicle_exits
      - REDIS_PASSWORD=your_redis_password
      - REDIS_ADDR=redis:6379
      - REDIS_DB=1
    volumes:
      - ./sharedutils:/go/src/github.com/sheenacodes/sharedutils # Mount local shared utils
    command: [ "sh", "-c", "go mod edit -replace github.com/sheenacodes/sharedutils=/go/src/github.com/sheenacodes/sharedutils && go run main.go" ]

    networks:
      - rabbitmq_network

  python-server:
    build:
      context: ./services/api-server
    container_name: api
    # ports:
    #   - "8000:8000"
      #   environment:
      # - PORT=8000
      # - FILENAME=/project/log/log.txt
    volumes:
      - data:/project/log
    networks:
      - rabbitmq_network

  redis:
    image: redis:7.4
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    environment:
      - REDIS_PASSWORD=your_redis_password # Set Redis password
    networks:
      - rabbitmq_network

networks:
  # redis_network:
  #   driver: bridge
  rabbitmq_network:
    driver: bridge

volumes:
  data:
  rabbitmq_data:
  rabbitmq_logs:
