
services:

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ
      - "15672:15672" # Management Plugin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./platform_config/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./platform_config/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
    entrypoint: [ "docker-entrypoint.sh" ]
    command: [ "rabbitmq-server" ]


  entry-generator:
    build:
      context: ./services/go_services/
    container_name: entrygenerator
    environment:
      - LOG_LEVEL=INFO
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672/
      - RABBITMQ_QUEUE_NAME=vehicle_entries
      - GENERATOR_MODE=entry
      - REDIS_PASSWORD=your_redis_password
      - REDIS_ADDR=redis:6379
      - REDIS_DB=0
    command: [ "./svc_generator" ]
    depends_on:
      - rabbitmq
      - redis


  exit-generator:
    build:
      context: ./services/go_services/
    container_name: exitgenerator
    environment:
      - LOG_LEVEL=INFO
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672/
      - RABBITMQ_QUEUE_NAME=vehicle_exits
      - GENERATOR_MODE=exit
      - REDIS_PASSWORD=your_redis_password
      - REDIS_ADDR=redis:6379
      - REDIS_DB=0
    command: [ "./svc_generator" ]
    depends_on:
      - rabbitmq
      - redis


  go_backend:
    build:
      context: ./services/go_services/
    container_name: recordkeeper
    ports:
      - "2112:2112"
    environment:
      - LOG_LEVEL=INFO
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672/
      - RABBITMQ_ENTRY_QUEUE_NAME=vehicle_entries
      - RABBITMQ_EXIT_QUEUE_NAME=vehicle_exits
      - REDIS_PASSWORD=your_redis_password
      - REDIS_ADDR=redis:6379
      - REDIS_DB=1
      - API_URL=http://python-server:8000/parkinglog
    command: [ "./svc_backend" ]
    depends_on:
      - rabbitmq
      - redis


  python-server:
    build:
      context: ./services/api-server
    container_name: api
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - LOG_LEVEL=INFO
      - FILENAME=/project/log/log.txt
    volumes:
      - ./output_files:/project/log


  redis:
    image: redis:7.4
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./platform_config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    environment:
      - REDIS_PASSWORD=your_redis_password # Set Redis password


  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: prometheus
    volumes:
      - ./platform_config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"


  grafana:
    image: grafana/grafana-oss:11.2.0
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=yourpassword  
      - GF_SERVER_ROOT_URL=http://localhost:3000  
      - GF_AUTH_ANONYMOUS_ENABLED=true  
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer 
      - GF_LOG_LEVEL=error
    volumes:
      - grafana-data:/var/lib/grafana
      - ./platform_config/grafana/provisioning:/etc/grafana/provisioning 
      - ./platform_config/grafana/dashboards:/etc/grafana/dashboards


volumes:
  grafana-data:
  rabbitmq_data:




