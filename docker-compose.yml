
services:

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ
      - "15672:15672" # Management Plugin
      #environment:
      #RABBITMQ_DEFAULT_USER: user
      #RABBITMQ_DEFAULT_PASS: password
      #RABBITMQ_DEFINITIONS: /etc/rabbitmq/definitions.json
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
      - ./platform_config/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./platform_config/rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      #- ./rabbitmq/init-rabbitmq.sh:/docker-entrypoint-init.d/init-rabbitmq.sh
    entrypoint: [ "docker-entrypoint.sh" ]
    command: [ "rabbitmq-server" ]
    networks:
      - rabbitmq_network

  entry-generator:
    build:
      context: ./services/go_services/
    container_name: entrygenerator
    environment:
      - LOG_LEVEL=DEBUG
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672/
      - RABBITMQ_QUEUE_NAME=vehicle_entries
      - GENERATOR_MODE=entry
      - REDIS_PASSWORD=your_redis_password
      - REDIS_ADDR=redis:6379
      - REDIS_DB=0
    command: [ "./svc_generator" ]
    depends_on:
      - rabbitmq
      - redis
    networks:
      - rabbitmq_network

  exit-generator:
    build:
      context: ./services/go_services/
    container_name: exitgenerator
    environment:
      - LOG_LEVEL=DEBUG
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672/
      - RABBITMQ_QUEUE_NAME=vehicle_exits
      - GENERATOR_MODE=exit
      - REDIS_PASSWORD=your_redis_password
      - REDIS_ADDR=redis:6379
      - REDIS_DB=0
    command: [ "./svc_generator" ]
    depends_on:
      - rabbitmq
      - redis
    networks:
      - rabbitmq_network

  go_backend:
    build:
      context: ./services/go_services/
    container_name: recordkeeper
    ports:
      - "2112:2112"
    environment:
      - LOG_LEVEL=DEBUG
      - RABBITMQ_URL=amqp://user:password@rabbitmq:5672/
      - RABBITMQ_ENTRY_QUEUE_NAME=vehicle_entries
      - RABBITMQ_EXIT_QUEUE_NAME=vehicle_exits
      - REDIS_PASSWORD=your_redis_password
      - REDIS_ADDR=redis:6379
      - REDIS_DB=1
      - API_URL=http://python-server:8000/parkinglog
    command: [ "./svc_backend" ]
    depends_on:
      - rabbitmq
      - redis
    networks:
      - rabbitmq_network

  python-server:
    build:
      context: ./services/api-server
    container_name: api
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - FILENAME=/project/log/log.txt
    volumes:
      - ./output_files:/var/log
    networks:
      - rabbitmq_network

  redis:
    image: redis:7.4
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./platform_config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    environment:
      - REDIS_PASSWORD=your_redis_password # Set Redis password
    networks:
      - rabbitmq_network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./platform_config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - rabbitmq_network


networks:
  rabbitmq_network:
    driver: bridge

volumes:
  rabbitmq_data:
  rabbitmq_logs:


